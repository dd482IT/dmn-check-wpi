package de.redsix.dmncheck.validators.core;

import org.camunda.bpm.model.xml.instance.ModelElementInstance;

/**
 * A simple validator is a {@link GenericValidator} where the validation (T) and applicability check (S) type are always the same.
 *
 * @param <T> Class that is used for validation and for the applicability check
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public abstract class SimpleValidator<T extends ModelElementInstance> extends GenericValidator<T, T> {

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Class<T> getClassUsedToCheckApplicability(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SimpleValidator<T> this) {
        return getClassUnderValidation();
    }
}
